#
#  Copyright (C) 2010, 2011, 2012 The Europa Barbarorum Team
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#      * Redistributions of source code must retain the above copyright
#        notice, this list of conditions and the following disclaimer.
#      * Redistributions in binary form must reproduce the above copyright
#        notice, this list of conditions and the following disclaimer in the
#        documentation and/or other materials provided with the distribution.
#      * Neither the name of The Europa Barbarorum Team nor the
#        names of other contributors may be used to endorse or promote products
#        derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#  DISCLAIMED. IN NO EVENT SHALL The Europa Barbarorum Team BE LIABLE FOR ANY
#  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

! This file lists a few GUI messages as well as many terse error messages

! Section 1: GUI type feedback messages
# format of the window title for a font preview
FontToolkit.FontWindowTitleFormat=\
    \u201c%1$s\u201d - CUF Preview
# format of the window title for a strings.bin preview against a given font.
StringsToolkit.StringsPreviewTitle=\
    \u201c%1$s\u201d - CUF Preview (with: \u201c%2$s\u201d)

! Section 2: terse errors:
# Message when a script exits with a code that isn't covered by ReservedExitCode
# messages
ScriptRunner.GenericScriptExit=\
    Script \u201c%1$s\u201d exited with code: %2$d.
# Message when the user attempts to obtain an exit code from a (sub) shell when that shell
# is still active.
Shell.NoExitCodeError=\
    Shell has not yet exited: %2$s
#Error message of the exception thrown when the user attempts to resurrect a dead shell.
Shell.ShellNecromancerAlert=\
    Shell already exited. Details:%n\
    Shell name (callee): %1$s%nExit code (callee) : %2$d%n
#Error when the user attempts to link against a non-existing lib
Shell.LinkNonExistingError=\
    File path does not exist: %1$s
#Error when the user attempts to link against a lib that cannot be read from.
Shell.LinkUnreadableError=\
    Not allowed to read: %1$s
#Error when the user attempts to link against something that isn't a valid Classpath entry
Shell.LinkTypeInvalidError=\
    Classpath entries must be ZIP/JAR files: %1$s. Details: %2$s.
#Error when the java.class.path property contains an entry for this lib already.
Shell.LinkClasspathError=\
    Classpath already contains entry for: %1$s
#Error when the user has already linked to the lib before.
Shell.LinkLinksError=\
    Already linked to file path: %1$s
#Message when lib is successfully linked against.
Shell.LinkSuccessful=\
    Added file path: %1$s%n\
    For the changes to take effect you may need to reload the language environment.
#Error when the god of "linking against 3rd party libs" is angry with you.
Shell.LinkURLError=\
    Unable to convert the file path to URL: %1$s.Details:%n%2$s
#Error when no interpreter matches the given query
Shell.InitNoEnvironmentError=\
    No engine could be found for: \u201c%1$s\u201d.%n\
    It is not recognised as MIME type, file extension, language or engine name.
#Text to use in place of a file extension, if no file extension can be found for a given interpreter.
Shell.InitDefaultExtension=\
    <File extension unknown>
#Error when the language environment does not return a file extension when queried for it.
Shell.InitNoExtensionError=\
    Engine refuses to disclose its file extension?%nDetails: %1$s
#Text to use when no MIME type can be found for the given interpreter.
Shell.InitDefaultMime=\
    <MIME type unknown>
PreloadScript.StartupPreloadOmitted=\
    Starting the CUF shell. Omitting the preload phase (there is no interpreter available for use yet) for %1$s.
PreloadScript.NoSuchPreloadScript=\
    Unable to run preload script for %1$s from %2$s. Cannot open file: %3$s
#Error when the language environment fails to return a MIME type when queried for it
Shell.InitNoMimeError=\
    Engine refuses to disclose its MIME type?%nDetails: %1$s
#Welcome \u201cscreen\u201d text.
Shell.InitWelcome=\
    %nWelcome to the CUF shell.%n\
    %nYour current interpreter language is: %1$s, version %2$s.\
    %n(Name of the interpreter: %3$s [version: %4$s], extension %5$s, MIME %6$s).%n\
    %nTo exit, type %7$s or %8$s if you wish to return a specific exit code.\
    %nTo change interpreter language type %9$s, where %10$s is a MIME type (e.g. text/javascript), \
    a file extension (e.g. py), a language (e.g. sleep) or the name of an interpreter (e.g. jruby).%n\
    %nNote that an engine may be available under numerous aliases, extensions, or MIME types.\
    %nYou can always get a handle on your interpreter through %11$s and use %12$s to query for more details.
#Error when a task was scheduled from outside the shell
Shell.ScheduleInvalidError=\
    Thread conflict in scheduled task.%n\
    Expected thread: #%1$d: %2$.%nGot thread: #%3$d: %4$s.
#Error when unable to read input
Shell.PromptUnexpectedError=\
    Unable to read input.%nDetails: %1$s
#Error when the input stream abruptly stops
Shell.PromptNoInputError=\
    Forgot to exit the shell before the end of file?
#Warning when infinite loop as result of null input is detected and it can be prevented by jumping to the next sub shell.
Shell.PromptAutoJump=\
    %nWarning: will force the current shell to suspend.%nDetails:\
    %n\tFrom shell: %1$s%n\tJump to index: %2$d%n
#Warning when infinite loop as result of null input is detected and can only be prevented by system exit.
Shell.PromptAutoExit=\
    %nWarning: will force the current shell to exit.\
    %nDetails:%n\tExit from shell: %1$s%n\tExit with code: %2$d%n
#Error/warning when the language environment does not support the method invocation API (javax.script.invocable)
Shell.NotInvocableError=\
    Warning: current language environment does not support automatic method invocation.%n\
    The example code from the welcome screen may not be reliable as a result.
#Error when a inlined script contains errors
Shell.InterpretInvalidError=\
    Evaluated script contains errors or the file could not be read: %1$s.%n\
    Details: %2$s.
#Error when typed command is invalid or caused some other error.
Shell.EvalInvalidError=\
    Script command not recognized/invalid: %1$s.%nDetails: %2$s
#Error when a shell exits with a code that is reserved for internal use
Shell.ReservedExitCodeError=\
    Warning: the given exit code %1$d is reserved for internal use. \
    The shell will exit with: %2$d
#Error when a shell calls exit on a subshell that has already exit'ed.
Shell.ExitIllegalError=\
    Shell already exited with code: %2$d.%n\
    Details: %1$s (callee), %3$s (caller).
#Message when a script name is invalid or not given
Shell.NoScriptNameError=\
    Script name must not be null or empty.
#Message when a subshell is created without STDIN stream.
Shell.NoInputStreamError=\
    STDIN stream must not be null.
# Message when a subshell is created without valid compilation task
Shell.NoCompileUnitError=\
    Missing compilation job.
# Message when a user attempts to create a compile unit without valid compile job
CompileUnit.InvalidCompileJob=\
    Not a valid compilation task.
# error when the user attempts to include an already included item (e.g. subshell) and select it.
Shell.StartShellError=\
    The shell has started already: %1$s.
# error when the user attempts to select an item (e.g. subshell) by index, but provides the wrong index
Shell.JumpToInvalidIndex=\
    Not a valid index: %1$d. Number of subshells: %2$d.
# error when the user attempts to mix multiple fonts into one, without providing any fonts at all
FontToolkit.SourcesListInvalid=\
    Invalid list of fonts to mix: the list should not be empty or null.
Shell.UnexpectedError=\
    Unexpected error in shell: %1$s. Details:%n%2$s
# error when the user attempts to mix multiple fonts into one, without providig a corresponding
# list of `flags' that indicate how each individual font should be treated
FontToolkit.MixinModeListInvalid=\
    Invalid list of mix mode values: the list should not be empty or null.
# error when the string that represents a single character is in fact empty
FontToolkit.FontStartCharStringInvalid=\
    Invalid start character: argument must have length > 0.
# error when the string that represents a single character is in fact empty
FontToolkit.FontEndCharStringInvalid=\
    Invalid end character: argument must have length > 0.
# error when the user attempts to load a file that is recognized as a font, but not supported by the program
FontToolkit.MimeTypeNotSupportedError=\
    Unable to load the file: %1$s. This type of font is not supported: %2$s%n\
    You can try to installing the font as a system font (and load it by name), or \
    converting it to a TrueType (TTF) or Type 1 (PFA) file (and load that instead).
# error when the user attempts to load a file as font that cannot be read
FontToolkit.FontFileUnreadable=\
    Unable to read the font: %1$s. Details:%n%2$s
# a warning when the user loads a TTF or similar file from disk without specifying additional 
# font attributes (e.g.: size, stroke width, and stroke weight).
FontToolkit.NoAttributesWarning=\
    Warning: no font attributes map supplied. This is probably an oversight on your part.
StringsToolkit.OrderedSourceTypeMismatch=\
    Type mismatch for compilation to ordered file format.%n\
    Expected a kind of \u201c%1$s\u201d but got: \u201c%2$s\u201d.
Shell.ThreadBlockError=\
    Bad locking attempt: locking would cause deadlock or block the Event Dispatch Thread (EDT).%n\
    Attempted to block on:  %1$s (id: %2$d).
Shell.InvalidCallBack=\
    Invalid CallBack given (null).
Shell.ExitSlotTaken=\
    Exit eventslot already taken.