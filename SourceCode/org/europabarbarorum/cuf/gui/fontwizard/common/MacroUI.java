/*
 *  
 *  Copyright (C) 2010, 2011, 2012 The Europa Barbarorum Team
 *  All rights reserved.
 *  
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 *      * Redistributions of source code must retain the above copyright
 *        notice, this list of conditions and the following disclaimer.
 *      * Redistributions in binary form must reproduce the above copyright
 *        notice, this list of conditions and the following disclaimer in the
 *        documentation and/or other materials provided with the distribution.
 *      * Neither the name of The Europa Barbarorum Team nor the
 *        names of other contributors may be used to endorse or promote products
 *        derived from this software without specific prior written permission.
 *  
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED. IN NO EVENT SHALL The Europa Barbarorum Team BE LIABLE FOR ANY
 *  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 *  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 *  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *  
 */

/*
 * MacroUI.java
 *
 * Created on Dec 20, 2010, 7:39:48 PM
 */
package org.europabarbarorum.cuf.gui.fontwizard.common;

import java.util.ArrayList;
import java.util.Enumeration;
import java.util.ResourceBundle;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.LayoutStyle.ComponentPlacement;
import org.europabarbarorum.cuf.gui.fontwizard.FontTreeNode;
import org.europabarbarorum.cuf.gui.fontwizard.create.CreateOtherFontPage.MacroNode;
import org.europabarbarorum.cuf.gui.support.SettingField;
import org.europabarbarorum.cuf.support.IOHelp;

/**
 * A form element to enter a macro name for {@link FontTreeNode} and equivalent items.
 * @author Johan Ouwerkerk
 */
public class MacroUI extends AbstractNameUI {

    /**
     * Create a new {@link MacroUI} for GUI builder purposes.
     * Makes this class a valid Java Bean.
     */
    public MacroUI () {
        this(null, null);
    }
    

    /**
     * Creates a new {@link MacroUI}.
     * @param parent the parent {@link FontTreeNode} which determines what names
     * can not be chosen in this {@link MacroUI}.
     * @param name the original macro name of the current node, or null if no name for the node
     * has been set yet.
     */
    public MacroUI (FontTreeNode parent, String name) {
        super(parent, name);
        initComponents();
    }

    private FontTreeNode top(FontTreeNode n) {
        if(n instanceof MacroNode) {
            return n;
        }
        FontTreeNode p = n.getParent();
        return p == null ? n: top(p);
    }

    private ArrayList<String> harvest(FontTreeNode top, ArrayList<String> harvested) {
        Enumeration<FontTreeNode> childs = top.children();
        FontTreeNode c;
        while(childs.hasMoreElements()) {
            c = childs.nextElement();
            if(harvested(c, harvested) && c.getAllowsChildren()) {
                harvested = harvest(c , harvested);
            }
        }
        return harvested;
    }

    private boolean harvested(FontTreeNode t, ArrayList<String> l) {
        if(t instanceof MacroNode) {
                l.add(((MacroNode) t).macro());
                return false;
        }
        return true;
    }

    @Override
    protected boolean discard (String input) {
        return !IOHelp.isValidXMLName(input);
    }

    @Override
    protected String[] names (FontTreeNode parent) {
        FontTreeNode top =top(parent);
        ArrayList<String> names = harvest(top, new ArrayList<String>());
        harvested(top, names);
        return names.toArray(new String[names.size()]);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        JLabel label = new JLabel();
        SettingField field = field();

        setName("Form"); // NOI18N

        ResourceBundle bundle = ResourceBundle.getBundle("org/europabarbarorum/cuf/gui/fontwizard/common/CommonUI"); // NOI18N
        label.setText(bundle.getString("MacroUI.label.text")); // NOI18N
        label.setName("label"); // NOI18N

        field.setText(bundle.getString("MacroUI.field.text")); // NOI18N
        field.setName("field"); // NOI18N

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(field, GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(label)
                    .addComponent(field, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
